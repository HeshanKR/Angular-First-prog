# Angular-First-prog

### Angular + Tailwind CSS Project Overview

**Project Type:**

- Angular frontend application using standalone components
- Routing handled through a dedicated `app.routes.ts` file

**Styling Setup:**

- Tailwind CSS integrated via PostCSS with the plugin `@tailwindcss/postcss`
- Tailwind styles imported globally in `src/style.css` using:

  ```css
  @import "tailwindcss";
  ```

- Component-specific styles in individual CSS files (e.g., `app.css`)

**PostCSS Configuration:**

- PostCSS config file named `postcssrc.json` located in the project root with:

  ```json
  {
    "plugins": {
      "@tailwindcss/postcss": {}
    }
  }
  ```

**Project Folder Structure:**

```
src/
├── index.html                <-- Main HTML file
├── main.ts                  <-- Angular bootstrap entry
├── style.css                <-- Global styles, imports Tailwind CSS
└── app/
    ├── app.ts               <-- Root AppComponent (standalone)
    ├── app.routes.ts        <-- Routing config (includes paths like 'tailwind')
    ├── app.config.ts        <-- Application-level config
    ├── app.html             <-- Root component template
    ├── app.css              <-- Root component CSS styles
    ├── app.spec.ts          <-- Tests for AppComponent
```

**Build & Serve:**

- Angular CLI or custom build scripts used to build and serve the app
- Tailwind utilities available globally via `style.css`

---

Below is folder and file structure of my angular frontend.

src/
├── index.html                
├── main.ts                  
├── style.css                
└── app/
----├── app.ts               
----├── app.routes.ts        
----├── app.config.ts        
----├── app.html             
----├── app.css              
----├── app.spec.ts
----|--interceptors/
----------|--csrf.interceptors.ts 
----|--auth/
----------|--admin-guard.ts
----------|--user-guard.ts
----|--google-login/
----------|--google-login.html
----------|--google-login.ts
----|--services/
----------|--auth.service.ts
----|--pages/
----------|--admin/
------------------|--role-editor/
------------------------|--role-editor.css
------------------------|--role-editor.html
------------------------|--role-editor.ts
----------|--dashboard/
------------------|--dashboard.component.css
------------------|--dashboard.component.ts
------------------|--dashboard.component.html
----------|--home/
----------------|--home.css
----------------|--home.html
----------------|--home.ts
----------|--login/
----------------|--login.component.css
----------------|--login.component.html
----------------|--login.component.ts
----------|--register/
----------------|--register.component.ts
----------------|--register.component.css
----------------|--register.component.html         


Below is my Express backend file and folder structure.

express-backend/
--|--config/
------|--passport-google.js
------|--redisClient.js
--|--controllers/
------|--auth.controller.js
------|--user.controller.js
--|--db/
------|--db.js
------|--init.js
--|--middlewares/
------|--authMiddleware.js
------|--rateLimiter.js
------|--csrf.js
--|--routes/
------|--admin.routes.js
------|--auth.routes.js
------|--google-auth.routes.js
------|--user.routes.js
--|--index.js
--|--.env